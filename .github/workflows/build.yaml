name: Build ReactJS Application

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js and Cache Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '16' # Ensure compatibility with React
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

      - name: Upload build directory as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/

  docker_build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: docker image build
        run: |
          docker image build -t dhillevajja/chess-game:${{ github.run_number }} .
          docker images ls

      - name: List Docker Images
        run: docker images
      - name: Cache Trivy Database
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            trivy-db-${{ runner.os }}-
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: dhillevajja/chess-game:${{ github.run_number }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: dhillevajja/chess-game:${{ github.run_number }}
  deploy-aksclster:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: docker_build
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: 'id-token'
      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
